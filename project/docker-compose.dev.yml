version: '3.8'

services:
  solene-photo-app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: solene-photo-dev
    ports:
      - "3003:3003"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
    env_file:
      - .env.dev
    networks:
      - solene-network
    restart: unless-stopped
    stdin_open: true
    tty: true
    depends_on:
      - mongodb
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: solene-backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/solene_photos
      - PORT=3001
    networks:
      - solene-network
    restart: unless-stopped
    depends_on:
      - mongodb

  mongodb:
    image: mongo:7-jammy
    container_name: solene-mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=solene_photos
    networks:
      - solene-network
    restart: unless-stopped

  # Service optionnel pour une base de données locale (si nécessaire)
  # postgres-dev:
  #   image: postgres:15-alpine
  #   container_name: solene-postgres-dev
  #   environment:
  #     POSTGRES_DB: solene_photo_dev
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_dev_data:/var/lib/postgresql/data
  #   networks:
  #     - solene-network

networks:
  solene-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local